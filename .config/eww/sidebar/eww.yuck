;; ** Variables ***********************************************************************

;; System vars
(defpoll profile_info :interval "1s" `scripts/profile`)
(defpoll CPU_USAGE :interval "1s" `../scripts/sys_info --cpu`)
(defpoll DISK_USAGE :interval "1s" `../scripts/sys_info --disk`)

(defvar SPEAKER_ICON "images/speaker.png")
(defvar MICROPHONE_ICON "images/microphone.png")

;; ** Widgets *************************************************************************

;; Redshift
(defpoll redshift_status :interval "10s" "scripts/redshift_status")
(defvar REDSHIFT_ON_ICON "images/redeye.png")
(defvar REDSHIFT_OFF_ICON "images/blueeye.png")

;; SysInfo
(defpoll sys_info :interval "1s" "scripts/sys_info")

;; quotes
;; (defwidget quotes []
;; 		(box :class "winbox"
;; 			(box :class "quote_box" :orientation "h" :valign "center" :halign "center" :spacing 10 :space-evenly "false"
;; 				(box :class "powericons" :style "background-image: url('../images/icons/quotes.png');")
;; 				(label :class "quote_text" :valign "center" :halign "center" :text QUOTE :wrap true :limit-width 90 ))))

(defwidget square-container [icon text ?click ?class]
		(box :class {class == "" ? "iconcontainer" : class} :style "background-image: url('${icon}');" :width "125" :height "125" :spacing 15 :valign "start"
			(eventbox :onclick "${click}" :cursor {click == "" ? "default" : "pointer"}
				(label :class "label" :valign "end" :halign "center" :text "${text}" :wrap true))))

(defwidget profile []
	(box :class "winbox" :hexpand true
		(label :class "title" :text "${profile_info.user}@${profile_info.hostname}: ${profile_info.uptime}")))

(defwidget sound_selector []
	(box :class "winbox padding-15" :orientation "h" :spacing 10 :space-evenly "true" :height 100
		(box :orientation "v" :space-evenly false :spacing 10
			(label :text "Outputs" :class "info")
			(for card in {sys_info?.sound.output}
				(eventbox
					:height 50
					:cursor "pointer"
					:halign "center"
					:class "soundbutton ${card.active ? 'soundactive' : ''}"
					:onclick "sound_manager -s '${card.sink_name}' '${card.profile_name}' '${card.card_name}' &"
					:timeout "5s"
					(box :orientation "h" :spacing 5 :space-evenly "false" :class "soundbutton-content"
						(box :width 30 :style "background-image: url('${SPEAKER_ICON}');" :class "iconcontainer")
						(label :text {card.card_name} :class "label" :wrap true)))
				))
		(box :orientation "v" :space-evenly false :spacing 10
			(label :text "Inputs" :class "info")
			(for card in {sys_info?.sound.input}
				(eventbox
					:height 50
					:cursor "pointer"
					:halign "center"
					:class "soundbutton ${card.active ? 'soundactive' : ''}"
					:onclick "sound_manager -s '${card.sink_name}' '${card.profile_name}' '${card.card_name}' &"
					:timeout "5s"
					(box :orientation "h" :spacing 5 :space-evenly "false" :class "soundbutton-content"
						(box :width 25 :style "background-image: url('${MICROPHONE_ICON}');" :class "iconcontainer")
						(label :text {card.card_name} :class "label" :wrap true)))
				))
		))

(defwidget sidebar-widget []
	(box :orientation "v" :spacing 10 :space-evenly "false"
		(box :orientation "h" :spacing 4 :space-evenly false
			(button :height "60" :width "60" :class "winbox iconcontainer tiny-icon" :style "background-image: url('images/close.png');" :onclick "toggle_sidebar")
			(profile))
		(box :orientation "h" :spacing 10 :space-evenly "true"
			(box :class "winbox" :orientation "v" :space-evenly "false" :height 125 :width 125
				(square-container
					:icon "${redshift_status == 'on' ? REDSHIFT_ON_ICON : REDSHIFT_OFF_ICON}"
					:text "Redshift ${redshift_status}"
					:class "iconcontainer tiny-icon"
					:click "toggle_redshift"))
			(box :class "winbox" :orientation "v" :valign "start" :space-evenly "false" :height 150 :width 150
				(circular-progress
					:class "iconcontainer chart"
					:value {sys_info.brightness.percent}
					:thickness 10
					:clockwise true
					:height 100
					:width 100
						(label :class "title" :wrap true :text "${sys_info.brightness.percent}%"))
				(label :class "info" :text "Brightness"))
			(box :class "winbox" :orientation "v" :space-evenly "true" :height 150 :width 150
				(square-container
					:icon "images/floppy-disk.png"
					:text "${sys_info.disk.used}/${sys_info.disk.size}"
					:class "iconcontainer tiny-icon")))
			(sound_selector)
		))

;; ** Windows *************************************************************************

(defwindow sidebar [screen]
           :monitor screen
           :geometry (geometry :x "-1%"
                               :y "6%"
                               :width "25%"
							   :height "93%"
                               :anchor "top right")
           :stacking "fg"
           :windowtype "normal"
           :wm-ignore true
(sidebar-widget))
