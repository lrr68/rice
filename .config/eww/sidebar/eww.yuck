;; ** Variables ***********************************************************************

(defpoll screen_resolution :interval "8h" "scripts/screen_resolutions")

(defvar SPEAKER_ICON "images/speaker.png")
(defvar MICROPHONE_ICON "images/microphone.png")
(defvar SPEAKER_MIC_ICON "images/speaker_mic.png")
(defvar OPEN_PACKAGE_ICON "images/package.png")
(defvar CLOSED_PACKAGE_ICON "images/closed-package.png")

(defpoll redshift_temperature :interval "10m" "redshift -c ~/.config/redshift/config -p | grep 'Color temperature' | awk -F':' '{print $2}'")
(defvar REDSHIFT_ON_ICON "images/redeye.png")
(defvar REDSHIFT_OFF_ICON "images/blueeye.png")

(defpoll sys_info :interval "2s" :initial "{}" "scripts/sys_info")
(defpoll task_list_empty_text :interval "10m" :initial "No tasks to do" "scripts/task_list -e")
(defpoll packages_to_update :interval "12h" :initial 0 "pacman -Qu | wc -l")
(defpoll todo_list :interval "10m" :initial "[]" "scripts/task_list -l")
(defvar todo_list_file "~/Documents/personal-notes/TODO.wiki")
(defvar sound_control_status "/tmp/sound_control_status")
(deflisten show_sound_control :initial false "tail -F /tmp/sound_control_status")

(defvar piece_of_wisdom "A foolish man shares his problems, a wise man shares his memes ~ Ancient Philosofer Fuk Yu")

;; ** Widgets *************************************************************************

(defwidget wisdom_quote []
  (box :class "winbox"
    (box :class "quote_box" :orientation "h" :valign "center" :halign "center" :spacing 10 :space-evenly false
      (image :path "images/thonk.png" :image-width 60 :image-height 60)
      (label :class "quote_text" :valign "center" :halign "center" :text piece_of_wisdom :wrap true))))

(defwidget square-container [screen icon text ?click ?class]
  (eventbox :onclick "${click}" :cursor {click == "" ? "default" : "pointer"}
    (box
      :class {class == "" ? "iconcontainer" : class}
      :style "background-image: url('${icon}');"
      :width 125
      :height 125
      :spacing 15
      :valign "center"
      (label :class "label" :valign "end" :halign "center" :text {text} :wrap true))))

(defwidget profile []
  (box :class "winbox" :hexpand true :space-evenly false
    (label :class "profile" :style "padding-left: 10px;" :text "ï•Œ ${sys_info?.profile.user}@${sys_info?.profile.hostname}: ")
    (label :class "label" :style "padding-right: 10px;" :text "${sys_info?.profile.uptime}")
    )
  )

(defwidget sound_selector []
  (box :class "winbox" :style "padding-bottom: 10px" :orientation "v" :space-evenly "false"
    (eventbox :onclick {show_sound_control ? "echo false >> ${sound_control_status}" : "echo true >> ${sound_control_status}"} :cursor "pointer"
      (box :orientation "h" :space-evenly false :spacing 85 :style "padding-left: 20px" :halign "baseline"
        (image :image-width 45 :image-height 45 :path "images/mixer.png" :style "margin-top: 10px;")
        (label :text "Sound Control" :class "title")
        (image :image-width 35 :image-height 35 :path {show_sound_control ? "images/upward-arrow.png" : "images/downward-arrow.png"} :style "margin-top: 10px;")))
    (revealer :transition "slidedown" :reveal {show_sound_control}
      (box :orientation "v"
        (box :orientation "h" :spacing 10 :space-evenly true :height 100
          (box :orientation "v" :space-evenly false :spacing 10
            (label :text "Outputs" :class "info")
            (for card in {sys_info?.sound.output}
              (eventbox
                :height 50
                :width 120
                :cursor "pointer"
                :halign "center"
                :class "soundbutton ${card.active ? 'soundactive' : ''}"
                :onclick "sound_manager -s '${card.sink_name}' '${card.profile_name}' '${card.card_name}' 'output' &"
                :timeout "5s"
                (box :orientation "h" :spacing 5 :space-evenly false :class "soundbutton-content" :halign "center"
                  (image :image-width 30 :image-height 30 :path SPEAKER_ICON)
                  (label :text "${substring(card.display_name,0,12)}${strlength(card.display_name) > 12 ? "..." : ""}" :class "label" :wrap true)))
              ))
          (box :orientation "v" :space-evenly false :spacing 10
            (label :text "Inputs" :class "info")
            (for card in {sys_info?.sound.input}
              (eventbox
                :height 50
                :width 120
                :cursor "pointer"
                :halign "center"
                :class "soundbutton ${card.active ? 'soundactive' : ''}"
                :onclick "sound_manager -s '${card.sink_name}' '${card.profile_name}' '${card.card_name}' 'input' &"
                :timeout "5s"
                (box :orientation "h" :spacing 5 :space-evenly false :class "soundbutton-content" :halign "center"
                  (image :image-width 25 :image-height 25 :path MICROPHONE_ICON)
                  (label :halign "center" :text "${substring(card.display_name,0,12)}${strlength(card.display_name) > 12 ? "..." : ""}" :class "label" :wrap true)))
              )))
        ))))

(defwidget tasklist []
  (box :orientation "h" :class "winbox" :height {arraylength(todo_list) > 0 ? 300 : 90}
    (scroll :vscroll true :hscroll false
      (box :orientation "v" :spacing 2 :space-evenly false
        (eventbox :cursor "pointer" :onclick "$TERMINAL --class 'Floating' -e $EDITOR ${todo_list_file} &"
          (box :orientation "h" :space-evenly false :spacing 120 :halign "baseline" :style "margin-top: 2px; padding-left: 17px"
            (image :path "images/to-do-list.png" :image-width 45 :image-height 45)
            (label :class "title" :text "Task List")))
          (revealer :reveal {arraylength(todo_list) == 0}
            (label :class "note" :text task_list_empty_text))
        (revealer :transition "slidedown" :reveal {arraylength(todo_list) > 0} :duration "500ms" :class "winbox"
          (box :orientation "v" :spacing 5 :space-evenly false
            (for task in todo_list
              (checkbox
                :style "color: #fff;padding: 0 15px;"
                :onchecked "scripts/task_list -c \"${substring(task, 4, strlength(task)-4)}\""
                :onunchecked "scripts/task_list -u \"${substring(task, 4, strlength(task)-4)}\""
                :checked {matches(substring(task, 0, 3), "\[x\]")}
                (label
                  :class "info ${matches(substring(task, 0, 3), "\[x\]") ? "checked" : ""}"
                  :style "border-bottom: 2px solid #444; margin-bottom: 5px;"
                  :wrap true
                  :text {substring(task, 4, strlength(task)-4)}))
            )))))))

(defwidget sidebar-widget [screen]
  (box :orientation "v" :spacing 8 :space-evenly false
    (box :orientation "h" :spacing 4 :space-evenly false
      (eventbox
        :height "60"
        :width "60"
        :class "winbox iconcontainer tiny-icon"
        :style "background-image: url('images/close.png');"
        :onclick "toggle_sidebar"
        :cursor "pointer")
      (profile))
    (box :orientation "h" :spacing 10 :space-evenly true
      (box :class "winbox" :orientation "v" :space-evenly false :height 150 :width 150
        (square-container
          :screen screen
          :icon "${sys_info?.redshift_status == 'on' ? REDSHIFT_ON_ICON : REDSHIFT_OFF_ICON}"
          :text {sys_info?.redshift_status == 'on' ? " ${redshift_temperature}" : " Redshift Off"}
          :class "iconcontainer tiny-icon"
          :click "toggle_redshift"))
      (box :class "winbox" :orientation "v" :valign "start" :space-evenly false :height 150 :width 150
        (circular-progress
          :class "iconcontainer chart"
          :value {sys_info?.brightness.percent}
          :thickness 10
          :clockwise true
          :height 100
          :width 100
          (label :class "title" :wrap true :text {sys_info?.brightness.percent}))
        (label :class "info" :text "Brightness"))
      (box :class "winbox" :orientation "v" :space-evenly true :height 150 :width 150
        (square-container
          :screen screen
          :icon "images/floppy-disk.png"
          :text "${sys_info?.disk.used}/${sys_info?.disk.size}"
          :class "iconcontainer tiny-icon")))
    (box :class "winbox" :orientation "h" :spacing 10
      (eventbox :onclick {packages_to_update > 40 ? "interactive_update &" : ""} :cursor {packages_to_update > 40 ? "pointer" : "default"}
        (box :orientation "h" :halign "baseline" :space-evenly false :spacing 65 :style "padding: 10px; padding-left: 20px;"
          (image :path {packages_to_update > 40 ? CLOSED_PACKAGE_ICON : OPEN_PACKAGE_ICON} :image-width 45 :image-height 45)
          (label :class "info" :text {packages_to_update > 40 ? "${packages_to_update} updates available" : "All Good, up to date!"}))))
    (scroll :vscroll true :hscroll false :height {round(screen_resolution["screen-${screen}"].height / 100 * 60, 0)}
      (box :orientation "v" :spacing 10 :space-evenly false
        (sound_selector)
        (tasklist)
      ))
    ))

;; ** Windows *************************************************************************

(defwindow sidebar [screen]
  :monitor screen
  :geometry (geometry :x "-1%"
  :y "6%"
  :width "25%"
  :height "87%"
  :anchor "top right")
  :stacking "fg"
  :windowtype "normal"
  :wm-ignore true
  (sidebar-widget :screen screen))


(defwindow quotes [screen]
  :monitor screen
  :geometry (geometry :x "-1%"
  :y "-2%"
  :width "25%"
  :height "5%"
  :anchor "bottom right")
  :stacking "fg"
  :windowtype "normal"
  :wm-ignore true
  (wisdom_quote))
